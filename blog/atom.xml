<feed xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns="http://www.w3.org/2005/Atom">
      <title>Lagom Blog</title>
      <link rel="alternate" type="text/html" href="https://www.lagomframework.com/blog"/>
      <link rel="self" type="application/atom+xml" href="https://www.lagomframework.com/blog/atom.xml"/>
      <id>https://www.lagomframework.com/blog</id>
      <rights>Copyright 2017, Lightbend</rights>
      <updated>2017-10-05T00:00:00.000Z</updated>
      <dc:creator>Lightbend</dc:creator>
      <dc:date>2017-10-05T00:00:00.000Z</dc:date>
      <dc:language>en</dc:language>
      <dc:rights>Copyright 2017, Lightbend</dc:rights>
      <entry>
          <title>Lagom 1.3.9 is released!</title>
          <link rel="alternate" href="https://www.lagomframework.com/blog/lagom-1-3-9.html"/>
          <category term="news" scheme="https://www.lagomframework.com/blog/tags/news.html"/>
          <author>
            <name>Renato Cavalcanti</name>
            <uri>https://github.com/rcavalcanti</uri>
          </author>
          <id>https://www.lagomframework.com/blog/lagom-1-3-9.html</id>
          <updated>2017-10-05T00:00:00.000Z</updated>
          <published>2017-10-05T00:00:00.000Z</published>
          <content type="html"><![CDATA[<p>The Lagom team has released Lagom 1.3.9. For a list of the specific changes in Lagom 1.3.9, see the <a href="https://www.lagomframework.com/changelog.html">change log</a>.</p>
<p>This release provides a few bug fixes and minor improvements. As an overview, this release contains the following:</p>
<ul>
  <li>a few dependencies updates (Play 2.5.17, Sbt 0.13.16 and ZooKeeper 3.4.10)</li>
  <li>the actor system termination when the cause of termination is a split brain has been simplified. This will make the code more maintainable but it has no impact on how Lagom behaves (<a href="https://github.com/lagom/lagom/issues/978">978</a>).</li>
  <li>we&rsquo;ve had a great community contribution fixing a bug that makes Lagom compatible with MariaDB (<a href="https://github.com/lagom/lagom/issues/1024">1024</a>).</li>
  <li>also from the community, we&rsquo;ve had a contribution improving the persistent entities <a href="https://www.lagomframework.com/documentation/1.3.x/java/Serialization.html#Schema-Evolution">Schema Evolution</a>. This improvement only affects javadsl users (<a href="https://github.com/lagom/lagom/issues/952">952</a>).</li>
</ul>
<p>We&rsquo;ve continued to get great pull requests from the Lagom community. Thanks to GitHub users <a href="https://github.com/PallaviSingh1992">Pallavi Sing</a>,<br/><a href="https://github.com/dr3s">dr3s</a> and <a href="https://github.com/olivierdeckers">Olivier Deckers</a> for your contributions to Lagom 1.3.9!</p>
<h2>Updating a Lagom project to version 1.3.9</h2>
<p>To update an sbt project, change the version of <code>lagom-sbt-plugin</code> in your <code>project/plugins.sbt</code> file.</p>
<p>To update a Maven project, change the <code>lagom.version</code> property in your top-level <code>pom.xml</code>.</p>
<p>After updating, it is recommended to fix any new deprecation warnings you see when compiling or running your services.</p>]]></content>
          <dc:date>2017-10-05T00:00:00.000Z</dc:date>
        </entry><entry>
          <title>Lagom 1.4.0-M2!</title>
          <link rel="alternate" href="https://www.lagomframework.com/blog/lagom-1-4-0-M2.html"/>
          <category term="news" scheme="https://www.lagomframework.com/blog/tags/news.html"/>
          <author>
            <name>Ignasi Marimon-Clos</name>
            <uri>https://github.com/ignasi35</uri>
          </author>
          <id>https://www.lagomframework.com/blog/lagom-1-4-0-M2.html</id>
          <updated>2017-09-05T00:00:00.000Z</updated>
          <published>2017-09-05T00:00:00.000Z</published>
          <content type="html"><![CDATA[<p>We are very pleased to announce the availability of the second Milestone release of Lagom 1.4.0. This is a preview release of the Lagom 1.4 series, which is focused on upgrading all of its building blocks. This release includes Play 2.6 and Akka 2.5&mdash;like Lagom 1.4.0-M1&mdash;but both have been upgraded to the latest minor release. It also includes the latest Slick 3.2.1 and Kafka 0.11.0.0. We are still adding the finishing touches to support Scala 2.12 in the Lagom 1.4.x series.</p>
<p>Phew, that was a mouthful.</p>
<p>Unfortunately, we&rsquo;ve decided that <a href="https://github.com/lagom/lagom/issues/932">supporting sbt 1.0</a> is not a feature we will work on before releasing Lagom 1.4.0. At the moment it is still undecided if support for sbt 1.0 will come during the 1.4.x series or later.</p>
<h3><a href="#migrating-from-other-versions" name="migrating-from-other-versions">Migrating from other versions</a></h3>
<p>The Lagom 1.4.x series is not focused on providing new, big features. Instead, it provides a collection of small improvements.</p>
<ul>
  <li>If you are migrating into Lagom 1.4.0-M2 from 1.4.0-M1 you should have a look at the release announcements for Lagom versions <a href="https://www.lagomframework.com/blog/lagom-1-3-6.html">1.3.6</a>, <a href="https://www.lagomframework.com/blog/lagom-1-3-7.html">1.3.7</a>, and <a href="https://www.lagomframework.com/blog/lagom-1-3-9.html">1.3.8</a>. The migration guide to 1.4 (<a href="https://www.lagomframework.com/documentation/1.4.x/java/Migration14.html">java</a> or <a href="https://www.lagomframework.com/documentation/1.4.x/scala/Migration14.html">scala</a>) has also been improved, don&rsquo;t forget to review it.</li>
  <li>If you are migrating into Lagom 1.4.0-M2 from a version in the Lagom 1.3.x series you should have a look at changes introduced in latest versions of the Lagom 1.3.x series and especially you should read the migration guide to 1.4 (<a href="https://www.lagomframework.com/documentation/1.4.x/java/Migration14.html">java</a> or <a href="https://www.lagomframework.com/documentation/1.4.x/scala/Migration14.html">scala</a>).</li>
</ul>
<h3><a href="#improvements" name="improvements">Improvements</a></h3>
<ul>
  <li>The Akka-HTTP based Service Gateway <a href="https://www.lagomframework.com/blog/lagom-1-3-7.html">introduced in Lagom 1.3.7</a> is enabled by default. It is possible to switch back to the old, Netty-based implementation. Please <a href="https://github.com/lagom/lagom/issues/new">raise an issue</a> to let us know if you need to do this. The Netty-based implementation will be removed in a future version of Lagom, but we want to fix any regressions first. Check out the <a href="https://www.lagomframework.com/documentation/1.4.x/java/ServiceLocator.html#Default-gateway-implementation">docs</a> for more details.</li>
  <li>Service Locators may return many URIs. If you have implemented your own Service Locator you may override the new <code>locateAll</code> methods so that a request for a service location returns not just one URI, but many. This was specifically included to connect to clustered services where the service SDK expects a collection of hosts and deals with the balancing internally (e.g. Cassandra or Kafka).</li>
  <li>A new <a href="https://github.com/lagom/lagom/issues/841"><code>CircuitBreakersPanel</code></a> replaces the previously internal, now deprecated <code>CircuitBreakers</code>. This change is especially relevant for Service Locator implementors so they have access to the underlying API. A <code>CircuitBreakersPanel</code> instance holds all the Circuit Breakers for the current instance to connect to all the remote services.</li>
</ul>
<h3><a href="#community-contributions" name="community-contributions">Community Contributions</a></h3>
<p>This release includes great contributions from the community. Thanks Wayne Wang, Elijah Rippeth, Yuliana Apaza and Surya Prakash Singh. Special thanks if this was your <a href="https://www.lagomframework.com/get-involved.html">first contribution</a>.</p>]]></content>
          <dc:date>2017-09-05T00:00:00.000Z</dc:date>
        </entry><entry>
          <title>Lagom 1.3.8 is here!</title>
          <link rel="alternate" href="https://www.lagomframework.com/blog/lagom-1-3-8.html"/>
          <category term="news" scheme="https://www.lagomframework.com/blog/tags/news.html"/>
          <author>
            <name>Ignasi Marimon-Clos</name>
            <uri>https://github.com/ignasi35</uri>
          </author>
          <id>https://www.lagomframework.com/blog/lagom-1-3-8.html</id>
          <updated>2017-08-30T00:00:00.000Z</updated>
          <published>2017-08-30T00:00:00.000Z</published>
          <content type="html"><![CDATA[<p>The Lagom team has released Lagom 1.3.8. For a list of the specific changes in Lagom 1.3.8, see the <a href="https://www.lagomframework.com/changelog.html">change log</a>.</p>
<p>This release fixes <a href="https://github.com/lagom/lagom/issues/974">a deadlock</a> when shutting down a Lagom process in some scenarios and brings Scala DSL Json Serialization feature-parity by providing an opt-in <a href="https://github.com/lagom/lagom/issues/955">compressor</a> for serialized messages. We also <a href="https://github.com/lagom/lagom/issues/968">upgraded</a> the underlying logback library.</p>
<p>This release is no different than previous ones and we continue to have great community contributions. Thanks to GitHub users <a href="https://github.com/t-h-a-l-i-s">t-h-a-l-i-s</a> and <a href="https://github.com/jiminhsieh">Jimin Hsieh</a>.</p>
<h2><a href="#json-serialization-compression" name="json-serialization-compression">Json Serialization compression</a></h2>
<p>Compression, as described here, is only used for persistent events, persistent snapshots and remote messages within the service cluster. It is not used for messages that are serialized in the external API of the service.</p>
<p>JSON can be rather verbose and for large messages it can be beneficial to enable compression. That is done by using the <code>JsonSerializer.compressed[T]</code> builder method instead of the <code>JsonSerializer.apply[T]</code>:</p>
<pre class="prettyprint"><code>import com.lightbend.lagom.scaladsl.playjson.{JsonSerializer, JsonSerializerRegistry}

object RegistryWithCompression extends JsonSerializerRegistry {
  override val serializers = Vector(

    // &#39;AddComment&#39; uses `apply[T]()` .
    JsonSerializer[AddComment],

    // The AddPost message is usually rather big, so we want it compressed
    // when it&#39;s too large.
    JsonSerializer.compressed[AddPost]

  )
}
</code></pre>
<p>The serializer will by default only compress messages that are larger than 1024 bytes. This threshold can be changed with configuration property:</p>
<pre class="prettyprint"><code>lagom.serialization.json {

  # The serializer will compress the payload if the message class
  # was registered using JsonSerializer.compressed and the payload
  # is larger than this value. Only used for remote messages within
  # the cluster of the service.
  compress-larger-than = 1024b

}
</code></pre>]]></content>
          <dc:date>2017-08-30T00:00:00.000Z</dc:date>
        </entry><entry>
          <title>Lagom 1.3.7 is released!</title>
          <link rel="alternate" href="https://www.lagomframework.com/blog/lagom-1-3-7.html"/>
          <category term="news" scheme="https://www.lagomframework.com/blog/tags/news.html"/>
          <author>
            <name>Renato Cavalcanti</name>
            <uri>https://github.com/rcavalcanti</uri>
          </author>
          <id>https://www.lagomframework.com/blog/lagom-1-3-7.html</id>
          <updated>2017-08-18T00:00:00.000Z</updated>
          <published>2017-08-18T00:00:00.000Z</published>
          <content type="html"><![CDATA[<p>The Lagom team has released Lagom 1.3.7. For a list of the specific changes in Lagom 1.3.7, see the <a href="https://www.lagomframework.com/changelog.html">change log</a>.</p>
<p>As an overview, this release contains the following:</p>
<ul>
  <li>Update Akka to 2.4.20 - <a href="http://akka.io/blog/news/2017/08/10/akka-2.4.20-released">Security Patch Release</a></li>
  <li>Changed logging default settings - file appender removed (see details below)</li>
  <li>Experimental Service Gateway based on akka-http</li>
  <li>Storing read-side processor offsets for unhandled events</li>
  <li>Automatic load of <code>LogbackLoggerConfigurator</code> for Lagom Scala Applications. Make sure you remove the <a href="https://github.com/lagom/lagom/issues/534">previously-documented</a> workaround you might have added for it.</li>
  <li>Other small bug fixes and minor enhancements</li>
</ul>
<p>We&rsquo;ve continued to get great pull requests from the Lagom community. Thanks to GitHub users <a href="https://github.com/domkun">Dominik Kunz</a>,<br/><a href="https://github.com/guizmaii">Jules Ivanic</a>, <a href="https://github.com/WayneWang12">Wayne Wang</a>, <a href="https://github.com/ashishtomer">Ashish Tomer</a> and <a href="https://github.com/benmccann">Ben McCann</a> for your contributions to Lagom 1.3.7!</p>
<h2><a href="#logging-settings-changes" name="logging-settings-changes">Logging settings changes</a></h2>
<p>We have changed different aspects of the default production and development logging settings which are explained below. Make sure you take that into consideration to avoid losing logging information in production environments. Services that have a custom Logback or log4j configuration already will not be affected.</p>
<p>In case you wish to keep the previous settings, you can add your own custom logging settings as explained in <a href="https://www.lagomframework.com/documentation/1.3.x/java/SettingsLogger.html#Custom-configuration">Java Guide</a> and <a href="https://www.lagomframework.com/documentation/1.3.x/scala/SettingsLogger.html#Custom-configuration">Scala Guide</a>. The previous settings can be found in the 1.3.6 versions of <a href="https://github.com/lagom/lagom/blob/1.3.6/logback/src/main/resources/logback-lagom-default.xml"><code>logback-lagom-default.xml</code></a> and <a href="https://github.com/lagom/lagom/blob/1.3.6/logback/src/main/resources/logback-lagom-dev.xml"><code>logback-lagom-dev.xml</code></a>.</p>
<p>If you do have a custom configuration, but would like to incorporate the improvements made to the defaults, you can view the new versions of <a href="https://github.com/lagom/lagom/blob/1.3.7/logback/src/main/resources/logback-lagom-default.xml"><code>logback-lagom-default.xml</code></a> and <a href="https://github.com/lagom/lagom/blob/1.3.7/logback/src/main/resources/logback-lagom-dev.xml"><code>logback-lagom-dev.xml</code></a>.</p>
<h3><a href="#logging-pattern-layout" name="logging-pattern-layout">Logging pattern layout</a></h3>
<p>The pattern layouts have changed to provide more useful information. Development and production environments share almost the same layout. </p>
<ul>
  <li>No abbreviations of logger names and stacktraces,</li>
  <li>Timestamps have millisecond precision and a sortable format.<br/> The timestamp format is now:</li>
  <li><strong>Production:</strong> <code>yyyy-MM-dd&#39;T&#39;HH:mm:ss.SSS&#39;Z&#39;</code> in UTC,</li>
  <li><strong>Development:</strong> <code>HH:mm:ss.SSS</code> in local time (date omitted).</li>
</ul>
<p>If you have configured log parsers for the old format, we recommend to adapt them accordingly when upgrading.</p>
<h3><a href="#logging-level" name="logging-level">Logging level</a></h3>
<p>Log level defaults to <strong>INFO</strong> instead of <strong>WARN</strong>. That includes the logging from Play, Akka and Lagom itself as well as the default root logger. </p>
<h3><a href="#file-appenders" name="file-appenders">File Appenders</a></h3>
<p>Since microservices should be easily movable between hosts, and be location-independent, we decided to remove Lagom&rsquo;s file appender. Instead, you can have your orchestration solution capture stdout and aggregate it. If desired, file appenders can be added by providing your own logging configuration as explained in <a href="https://www.lagomframework.com/documentation/1.3.x/java/SettingsLogger.html#Custom-configuration">Java Guide</a> and <a href="https://www.lagomframework.com/documentation/1.3.x/scala/SettingsLogger.html#Custom-configuration">Scala Guide</a>.</p>
<h2>Akka-http based Service Gateway (experimental)</h2>
<p>We introduced a new implementation of the development mode service gateway based on <code>akka-http</code>. This is still experimental and therefore not enabled by default. In a future version of Lagom, this implementation will replace the current Netty-based implementation. Please try out the new service gateway implementation and raise an issue in GitHub if you find any problems.</p>
<p>You can enable it by adding the following in your build.</p>
<p>In sbt:</p>
<pre class="prettyprint"><code class="language-scala">lagomServiceGatewayImpl in ThisBuild := &quot;akka-http&quot;
</code></pre>
<p>In Maven root project pom:</p>
<pre class="prettyprint"><code class="language-xml">&lt;plugin&gt;
    &lt;groupId&gt;com.lightbend.lagom&lt;/groupId&gt;
    &lt;artifactId&gt;lagom-maven-plugin&lt;/artifactId&gt;
    &lt;version&gt;${lagom.version}&lt;/version&gt;
    &lt;configuration&gt;
        &lt;serviceGatewayImpl&gt;akka-http&lt;/serviceGatewayImpl&gt;
    &lt;/configuration&gt;
&lt;/plugin&gt;
</code></pre>
<h2>Updating a Lagom project to version 1.3.7</h2>
<p>To update an sbt project, change the version of <code>lagom-sbt-plugin</code> in your <code>project/plugins.sbt</code> file.</p>
<p>To update a Maven project, change the <code>lagom.version</code> property in your top-level <code>pom.xml</code>.</p>
<p>After updating, it is recommended to fix any new deprecation warnings you see when compiling or running your services.</p>]]></content>
          <dc:date>2017-08-18T00:00:00.000Z</dc:date>
        </entry><entry>
          <title>Lagom 1.3.6 is released!</title>
          <link rel="alternate" href="https://www.lagomframework.com/blog/lagom-1-3-6.html"/>
          <category term="news" scheme="https://www.lagomframework.com/blog/tags/news.html"/>
          <author>
            <name>Tim Moore</name>
            <uri>https://github.com/TimMoore</uri>
          </author>
          <id>https://www.lagomframework.com/blog/lagom-1-3-6.html</id>
          <updated>2017-07-17T00:00:00.000Z</updated>
          <published>2017-07-17T00:00:00.000Z</published>
          <content type="html"><![CDATA[<p>The Lagom team has released Lagom 1.3.6. For a list of the specific changes in Lagom 1.3.6, see the <a href="https://www.lagomframework.com/changelog.html">change log</a>.</p>
<p>As an overview, this release contains the following:</p>
<ul>
  <li>A fix for event publishing to Kafka to ensure that topic producers are automatically restarted after failure (with exponential back off)</li>
  <li>Deprecated APIs to fix typos and inconsistencies.</li>
  <li>Other small bug fixes and minor enhancements</li>
</ul>
<p>We&rsquo;ve continued to get great pull requests from the Lagom community. Thanks to GitHub users <a href="https://github.com/edouardKaiser">Edouard Kaiser</a>, <a href="https://github.com/AmeerGN">AmeerGN</a>, <a href="https://github.com/erip">Elijah Rippeth</a>, <a href="https://github.com/mihbor">mihbor</a>, and Outreachy intern <a href="https://github.com/yg-apaza">Yuliana Apaza</a> for your contributions to Lagom 1.3.6!</p>
<h2>Updating a Lagom project to version 1.3.6</h2>
<p>To update an sbt project, change the version of <code>lagom-sbt-plugin</code> in your <code>project/plugins.sbt</code> file.</p>
<p>To update a Maven project, change the <code>lagom.version</code> property in your top-level <code>pom.xml</code>.</p>
<p>After updating, it is recommended to fix any new deprecation warnings you see when compiling or running your services.</p>]]></content>
          <dc:date>2017-07-17T00:00:00.000Z</dc:date>
        </entry><entry>
          <title>Lagom 1.4.0-M1 is released!</title>
          <link rel="alternate" href="https://www.lagomframework.com/blog/lagom-1-4-0-M1.html"/>
          <category term="news" scheme="https://www.lagomframework.com/blog/tags/news.html"/>
          <author>
            <name>Ignasi Marimon-Clos</name>
            <uri>https://github.com/ignasi35</uri>
          </author>
          <id>https://www.lagomframework.com/blog/lagom-1-4-0-M1.html</id>
          <updated>2017-06-29T00:00:00.000Z</updated>
          <published>2017-06-29T00:00:00.000Z</published>
          <content type="html"><![CDATA[<p>We are thrilled to announce that Lagom is moving fast into upgrading it&rsquo;s underlying stack (Akka, Play and Scala) to corresponding latest versions. This is the biggest change you may expect in the upcoming version 1.4.0 of Lagom. There are still <a href="https://github.com/lagom/lagom/milestone/17">few issues open</a> and some of these pending issue could potentially be incompatible with the effort we&rsquo;ve done in Lagom 1.4.0-M1 already.</p>
<p>Lagom 1.4.0 includes a new feature to <a href="https://github.com/lagom/lagom/pull/763">start and stop external services</a> when using <code>sbt runAll</code>. This allows binding infrastructure services to the Developer Mode lifecycle improving the developer experience. This release also includes a new, community developed support to develop <a href="https://github.com/lagom/lagom/pull/714">Read-Side code using Slick</a>.</p>
<p>This is a preview release not ready for production so feel free to use it on a safe environment or a staging environment. We know we want to make some more improvements like using the new <a href="https://github.com/lagom/lagom/issues/742">Akka Coordinated shutdown</a> or <a href="https://github.com/lagom/lagom/issues/816">use Akka&rsquo;s DData instead of persistent Shard Coordinator</a>. We still have to complete the upgrade to support Scala 2.12 but it&rsquo;s on our radar for the 1.4.0 release.</p>
<p>This release includes several improvements with an important number of community contributions by <a href="https://github.com/erip">erip</a>, <a href="https://github.com/odwrotnie">odwrotnie</a>, <a href="https://github.com/yg-apaza">yg-apaza</a>, <a href="https://github.com/benmccann">benmccann</a> and <a href="https://github.com/himani1">himani1</a> in bug fixing, documentation and even adding features. Thanks all, you rock!</p>
<p>We&rsquo;re close to releasing a ConductR version that supports the 1.4.0 family of Lagom so if that&rsquo;s your preferred deployment strategy you will need to wait a few days until we&rsquo;ve baked that release.</p>
<h2><a href="#updating" name="updating">Updating</a></h2>
<p>This is a minor release so there are a few deprecated APIs you should migrate from. Also, the upgrade of Play and Akka may require you attention. Please have a look at the migration guide to 1.4 (<a href="https://www.lagomframework.com/documentation/1.4.x/java/Migration14.html">java</a> or <a href="https://www.lagomframework.com/documentation/1.4.x/scala/Migration14.html">scala</a>).</p>
<p>To update an sbt project, change the version of <code>lagom-sbt-plugin</code> in your <code>project/plugins.sbt</code> file.</p>
<p>To update a Maven project, change the <code>lagom.version</code> property in your top-level <code>pom.xml</code>.</p>
<h2><a href="#change-log" name="change-log">Change log</a></h2>
<p>See the <a href="https://www.lagomframework.com/changelog.html">change log</a> for more details on exactly what has been fixed in each release.</p>]]></content>
          <dc:date>2017-06-29T00:00:00.000Z</dc:date>
        </entry><entry>
          <title>Lagom 1.3.5 is released!</title>
          <link rel="alternate" href="https://www.lagomframework.com/blog/lagom-1-3-5.html"/>
          <category term="news" scheme="https://www.lagomframework.com/blog/tags/news.html"/>
          <author>
            <name>Ignasi Marimon-Clos</name>
            <uri>https://github.com/ignasi35</uri>
          </author>
          <id>https://www.lagomframework.com/blog/lagom-1-3-5.html</id>
          <updated>2017-06-13T00:00:00.000Z</updated>
          <published>2017-06-13T00:00:00.000Z</published>
          <content type="html"><![CDATA[<p>This has been quite a busy month since we released 1.3.4. <a href="http://event.scaladays.org/scaladays-cph-2017">Scala Days Copenhagen</a> took a lot of time from our schedules and thus 1.3.5 was delayed more than we&rsquo;d hoped for.</p>
<p>This release is a bugfix release with a couple of community contributions. We&rsquo;re seeing a constant flow of community contributions in the past few releases and that is great news! Special thanks to <a href="https://github.com/crfeliz">crfeliz</a>, <a href="https://github.com/guizmaii">guizmaii</a>, <a href="https://github.com/edouardKaiser">edouardKaiser</a> and <a href="https://github.com/jaiew">jaiew</a> for their great work.</p>
<h2><a href="#updating" name="updating">Updating</a></h2>
<p>To update an sbt project, change the version of <code>lagom-sbt-plugin</code> in your <code>project/plugins.sbt</code> file.</p>
<p>To update a Maven project, change the <code>lagom.version</code> property in your top-level <code>pom.xml</code>.</p>
<h2><a href="#change-log" name="change-log">Change log</a></h2>
<p>See the <a href="https://www.lagomframework.com/changelog.html">change log</a> for more details on exactly what has been fixed in each release.</p>]]></content>
          <dc:date>2017-06-13T00:00:00.000Z</dc:date>
        </entry><entry>
          <title>Lagom 1.3.4 is released!</title>
          <link rel="alternate" href="https://www.lagomframework.com/blog/lagom-1-3-4.html"/>
          <category term="news" scheme="https://www.lagomframework.com/blog/tags/news.html"/>
          <author>
            <name>Ignasi Marimon-Clos</name>
            <uri>https://github.com/ignasi35</uri>
          </author>
          <id>https://www.lagomframework.com/blog/lagom-1-3-4.html</id>
          <updated>2017-05-17T00:00:00.000Z</updated>
          <published>2017-05-17T00:00:00.000Z</published>
          <content type="html"><![CDATA[<p>The Lagom team is proud to announce the release of Lagom 1.3.4. This is a bugfix release with a couple of community contributions.</p>
<h2><a href="#updating" name="updating">Updating</a></h2>
<p>To update an sbt project, change the version of <code>lagom-sbt-plugin</code> in your <code>project/plugins.sbt</code> file.</p>
<p>To update a Maven project, change the <code>lagom.version</code> property in your top-level <code>pom.xml</code>.</p>
<h2><a href="#change-log" name="change-log">Change log</a></h2>
<p>See the <a href="https://www.lagomframework.com/changelog.html">change log</a> for more details on exactly what has been fixed in each release.</p>]]></content>
          <dc:date>2017-05-17T00:00:00.000Z</dc:date>
        </entry><entry>
          <title>Introducing the Lagom code generator</title>
          <link rel="alternate" href="https://www.lagomframework.com/blog/announcing-lagom-code-generator.html"/>
          <category term="news" scheme="https://www.lagomframework.com/blog/tags/news.html"/><category term="scala" scheme="https://www.lagomframework.com/blog/tags/scala.html"/><category term="java" scheme="https://www.lagomframework.com/blog/tags/java.html"/><category term="generator" scheme="https://www.lagomframework.com/blog/tags/generator.html"/>
          <author>
            <name>Ignasi Marimon-Clos</name>
            <uri>https://github.com/ignasi35</uri>
          </author>
          <id>https://www.lagomframework.com/blog/announcing-lagom-code-generator.html</id>
          <updated>2017-05-16T00:00:00.000Z</updated>
          <published>2017-05-16T00:00:00.000Z</published>
          <content type="html"><![CDATA[<p>We&rsquo;re happy to announce the first <em>alpha</em> release of the <a href="https://github.com/lagom/sbt-lagom-descriptor-generator">Lagom Descriptor Generator</a> a project started as a proof-of-concept and that we&rsquo;ve recently improved. The motivation is to ease consuming third party APIs (be it lagom services, other services on your organization or public APIs in the wild) reducing the amount of code required.</p>
<p>We want Lagom to increase the types of services it can talk to. Until now Lagom was focused on providing RPC via HTTP/JSON as default and we already started working on an gRPC transport for Lagom both for producing services and consuming 3rd party gRPC endpoints. </p>
<p>We had to make a decision since working in both (a) a fully featured code generator from OpenAPI specs to Lagom source code and (b) adding gRPC support into Lagom was beyond our capacity. Today we are calling the community to continue our work in the Lagom code generator while we focus our attention to gRPC. The <em>Lagom Descriptor Generator</em> project may eventually generate Lagom API descriptor sources from seveal API specification format. At the moment only OpenaAPI v2 (aka <em>Swagger specs</em>) is supported.</p>
<p>The <a href="https://github.com/lagom/sbt-lagom-descriptor-generator">Lagom Descriptor Generator</a> is open to community contributions &ndash;frequent and infrequent&ndash;, everyone helps out. It&rsquo;s a repo that loves new code and fixes. The Lagom core team will remain in an <a href="https://www.lagomframework.com/community-process.html#definitions">integrator</a> role, the team will keep an eye on the project to assure its overall coherence but does not fully support it.</p>
<h3><a href="#project-status" name="project-status">Project Status</a></h3>
<p>The current implementation is a <em>crude</em> generator that will convert a <code>swagger.json</code> (or yaml) into Lagom API source code. It is currently available as an <code>sbt</code> plugin but it could be <a href="https://github.com/lagom/sbt-lagom-descriptor-generator/issues/11">extended into a Maven plugin</a> too. The GitHub repository includes <code>sbt-</code> on the name but that is a <a href="https://github.com/lagom/sbt-lagom-descriptor-generator/issues/4">mistake</a>.</p>
<p>The current implementation will read <a href="https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md">OpenAPI v2</a> files but we think other API specification formats (e.g. RAML) should be supported too. We added some <a href="https://github.com/lagom/sbt-lagom-descriptor-generator#supported-specs">tips</a> on what should be done to add support for new specification formats.</p>
<p>Finally, this first available release is demoed in the <a href="https://github.com/ignasi35/lagom-pet-store/">Pet Store application</a>. That sample application adapts the famous Open API <a href="http://petstore.swagger.io/">Pet Store</a> example into a Lagom application. The Lagom version is made of a LagomJava Pet Service, a LagomScala Store Service and a PlayJava web frontend. Each of the lagom services in the sample application describes its API using an OpenAPI v2 file located in <code>src/main/openapi/</code> instead of including the usual <code>xxx-service-api</code> project separately. Finally, the web frontend uses copies of each of the OpenAPi files it wants to consume. Read the project <a href="https://github.com/ignasi35/lagom-pet-store/blob/master/README.md">README.md</a> for more details.</p>]]></content>
          <dc:date>2017-05-16T00:00:00.000Z</dc:date>
        </entry><entry>
          <title>Welcome Outreachy Interns Ruchika Lakhina and Yuliana Apaza</title>
          <link rel="alternate" href="https://www.lagomframework.com/blog/welcome-outreachy-interns-2017-May-Aug.html"/>
          <category term="news" scheme="https://www.lagomframework.com/blog/tags/news.html"/><category term="outreachy" scheme="https://www.lagomframework.com/blog/tags/outreachy.html"/>
          <author>
            <name>Tim Moore</name>
            <uri>https://github.com/TimMoore</uri>
          </author>
          <id>https://www.lagomframework.com/blog/welcome-outreachy-interns-2017-May-Aug.html</id>
          <updated>2017-05-05T00:00:00.000Z</updated>
          <published>2017-05-05T00:00:00.000Z</published>
          <content type="html"><![CDATA[<p>Lightbend and Lagom are proud to be participating in <a href="https://gnome.org/outreachy/">Outreachy</a>, a program to help groups that are underrepresented in free and open source software get involved.</p>
<p>We&rsquo;re happy to announce that <a href="https://github.com/lakhina">Ruchika Lakhina</a> and <a href="https://yuliana.me/">Yuliana Apaza</a> have been accepted to work on Lagom for the May - August 2017 round of Outreachy</p>
<p>We had several fantastic applicants, and the entire Lagom team has been very impressed with the quality of contributions to Lagom from Outreachy applicants. In the end, Ruchika and Yuliana stood out as active contributors who collaborated well with Lagom developers and each other, and both prepared thoughtful and detailed proposals for how they plan to spend their time during the Outreachy internship.</p>
<p>They will both be working on improvements to our Online Auction example application (<a href="https://github.com/lagom/online-auction-java">Java version</a>/<a href="https://github.com/lagom/online-auction-scala">Scala version</a>). Online Auction demonstrates a broad range of Lagom&rsquo;s features and architectural practices. Ruchika and Yuliana will be continuing development of this example by rounding out the functionality and including examples of more Lagom features.</p>
<p>Please join me in welcoming them to the project!</p>]]></content>
          <dc:date>2017-05-05T00:00:00.000Z</dc:date>
        </entry>
    </feed>